// Generated by CoffeeScript 1.6.2
(function() {
  define(["ural/viewRender"], function(viewRender) {
    var applyBinding, applyData, render, _layoutModelsData;

    _layoutModelsData = [];
    render = function(path, done) {
      return viewRender.render(path, done);
    };
    applyData = function(bodyHtml, layoutModelsData, viewBag, isApply) {
      var layoutHtml, lmd, lt, _i, _len;

      $.templates({
        pvt: bodyHtml
      });
      layoutHtml = $.render.pvt(viewBag);
      for (_i = 0, _len = _layoutModelsData.length; _i < _len; _i++) {
        lmd = _layoutModelsData[_i];
        lt = $("#" + lmd.layout)[0];
        ko.cleanNode(lt);
        $("[data-view-engine-clean]", lt).empty();
      }
      _layoutModelsData = [];
      $("#_layout").empty();
      $("#_layout").append(layoutHtml);
      if (isApply) {
        /*
        for lmd in layoutModelsData
          lt = $("#" + lmd.layout)[0]
          if !lt then throw "Layout [#{lmd.layout}] to apply bindings not found"
          ko.applyBindings lmd.data, lt
        */

        applyBinding(layoutModelsData);
        _layoutModelsData = layoutModelsData;
        if ($("#layout_loading").is(":visible")) {
          $("#layout_loading").hide();
          return $("#layout_content").show();
        }
      }
    };
    applyBinding = function(layoutModelsData) {
      var lmd, lt, _i, _len, _results;

      _results = [];
      for (_i = 0, _len = layoutModelsData.length; _i < _len; _i++) {
        lmd = layoutModelsData[_i];
        lt = $("#" + lmd.layout)[0];
        if (!lt) {
          throw "Layout [" + lmd.layout + "] to apply bindings not found";
        }
        _results.push(ko.applyBindings(lmd.data, lt));
      }
      return _results;
    };
    return {
      render: render,
      applyData: applyData,
      applyBinding: applyBinding
    };
  });

}).call(this);

/*
//@ sourceMappingURL=viewEngine.map
*/
